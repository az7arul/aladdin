#!/usr/bin/env node

var exec = require('child_process').exec;
var path = require('path');
var fs = require('fs');
var yaml = require('yaml');
var Mustache = require('mustache');

var lib = path.join(__dirname, './../lib');

var render = function(template, context) {
  return Mustache.to_html(template, context);
}

var loadScripts = function(f) {
  fs.readFile('./spec/load.yml', function(err, data) {
    if (!err) {
      var scripts = yaml.eval(data.toString()).map(function(script) {
        return path.resolve(lib, script);
      });

      f(scripts);
    }
  });
}

var loadSpecs = function(f) {
  var specPath = process.argv[2] || 'spec';
  specPath = path.join(process.cwd(), specPath);

  if (path.extname(specPath) == '.js') {
    f([ specPath ]);
  }
  else {
    fs.readdir(specPath, function(err, files) {
      if (!err) {
        var specs = files.filter(function(file) {
          return path.extname(file) == '.js';
        }).map(function(file) {
          return path.join(specPath, file);
        });

        f(specs);
      }
    });
  }
}

var runTests = function(runner) {
  var cmds = [
    'phantomjs',
    path.join(lib, 'run_jasmine_test.coffee'),
    runner
  ];

  exec(cmds.join(' '), function(err, stdout, stderr) {
    console.log(stdout);
  });
}

var createRunner = function(html) {
  var runner = path.join(lib, 'runner.html');

  fs.writeFile(runner, html, function() {
    runTests(runner);
  });
}

var loadRunner = function(f) {
  var runner = path.join(lib, 'console-runner.js');

  fs.readFile(runner, function(err, data) {
    f(data.toString());
  });
}

var loadTemplate = function() {
  var template = path.join(lib, 'runner.template.html');

  fs.readFile(template, function(err, data) {
    loadScripts(function(scripts) {
      loadSpecs(function(specs) {
        var context = { scripts: scripts, specs: specs };
        var html = render(data.toString(), context);

        createRunner(html);
      });
    });
  });
}

loadTemplate();
